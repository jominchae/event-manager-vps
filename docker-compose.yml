# Event Manager - VPS Deployment Stack
version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: event-manager-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://eventmanager:${POSTGRES_PASSWORD:-eventmanager123}@postgres:5432/eventmanager
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      - SESSION_SECRET=${SESSION_SECRET:-your-super-secret-session-key-change-in-production}
      - STORAGE_TYPE=local
      - STORAGE_UPLOAD_DIR=/app/uploads
      - STORAGE_PUBLIC_DIRS=/app/uploads/public
      - STORAGE_PRIVATE_DIR=/app/uploads/private
      - DB_CLIENT=pg
      - DB_POOL_SIZE=20
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
    volumes:
      - uploads_data:/app/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - event-manager-network

  postgres:
    image: postgres:15-alpine
    container_name: event-manager-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=eventmanager
      - POSTGRES_USER=eventmanager
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-eventmanager123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eventmanager -d eventmanager"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - event-manager-network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: event-manager-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@eventmanager.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin123}
      - PGADMIN_LISTEN_PORT=80
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - event-manager-network
    profiles:
      - admin

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: event-manager-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - uploads_data:/app/uploads:ro
    depends_on:
      - app
    networks:
      - event-manager-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  uploads_data:
    driver: local

networks:
  event-manager-network:
    driver: bridge